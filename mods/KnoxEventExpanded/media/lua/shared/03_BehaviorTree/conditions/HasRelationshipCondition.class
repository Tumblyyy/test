import zombie.ai.astar.AStarPathFinder;
import zombie.ai.astar.Path;
import zombie.ai.astar.PathFindState;
import zombie.characters.IsoGameCharacter;
import zombie.characters.IsoPlayer;
import zombie.characters.SurvivorFactory;
import zombie.characters.SurvivorGroup;
import zombie.core.Core;
import zombie.core.Rand;
import zombie.inventory.InventoryItem;
import zombie.iso.BuildingDef;
import zombie.iso.IsoCell;
import zombie.iso.IsoGridSquare;
import zombie.iso.IsoObject;
import zombie.iso.IsoWorld;
import zombie.network.GameServer;
import zombie.scripting.ScriptManager;
import zombie.ui.UIElement;
import zombie.util.lambda.Predicates;
import zombie.vehicles.PathFindBehavior2;
import zombie.vehicles.VehicleManager;
import zombie.Lua.LuaManager;
import java.util.ArrayList;
import java.util.function.Predicate;
import se.krka.kahlua.vm.KahluaTable;

public class HasRelationshipCondition extends BehaviorNode {
    private String partyID;
    private int minimumRelationship;

    public HasRelationshipCondition(String partyID, int minimumRelationship) {
        this.partyID = partyID;
        this.minimumRelationship = minimumRelationship;
    }

    @Override
    public boolean check(IsoGameCharacter character) {
        IsoPlayer player = (IsoPlayer) character.getController();
        if (player == null) {
            return false;
        }
        int playerID = player.OnlineID;
        KahluaTable questEvents = LuaManager.env.rawget("QuestEvents");
        if(questEvents == null){
            return false;
        }
        int relationship = ((Double) questEvents.rawget("getRelationship").call(questEvents, playerID, partyID)).intValue();

        return relationship >= minimumRelationship;
    }
}